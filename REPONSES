[Question P1.1] Comment représentez-vous ces vecteurs ? Comment sont-ils organisés : quels attributs ? quelles méthodes ? quels droits d'accès ?
The vectors are represented using a class Vecteur.
An attribute of vector of real numbers ( vector<double> ) was used to represent the vector itself, as we do not know it's dimensions. This attribute was set private, to have more control over this variable outside of the class.
The methods were set as public, because these methodes will definitely be used outside of the class, and thus, it would not make sense to set them as private (no access outside of class).


[Question P1.2] Quel choix avez vous fait pour les opérations entre vecteurs de dimensions différentes ?
We used the throw of exceptions for operations between different dimensions. For these operations, a message would be printed saying "Erreur (operation) !"


[Question P4.1]  Avez-vous ajouté un constructeur de copie ? Pourquoi (justifiez votre choix) ?
Yes, we added a copy constructor. Because...


[Question P4.2] Si l'on souhaitait ajouter un constructeur par coordonnées sphériques (deux angles et une longueur) pour les vecteurs de dimension 3,
a] que cela impliquerait-il au niveau des attributs de la classe ?
b] quelle serait la difficulté majeure (voire l'impossibilité) de sa réalisation en C++ ? (C'est d'ailleurs pour cela qu'on ne vous demande pas de faire un tel constructeur !)


[Question P4.3] Quels opérateurs avez vous introduits ?
We were asked to transform the methods affiche() and compare() into operators. 
For affiche() we used an external operator "ostream& operator<<". However, this operation needed access to the vector (which is a private attribute).
To solve the problem that external operator cannot access private attributes, we added a key word "friend" in front of the operator.
For compare(), we used an internal operator "bool operator==".

[Question P6.1] Comment avez vous conçu votre classe Integrateur ? 

[Question P6.2] Quelle est la relation entre les classes Integrateur et IntegrateurEulerCromer ?
The class IntegrateurEulerCromer is a sub-class of the class Integrateur, i.e. IntegrateurEulerCromer <<est-un>> Integrateur (heritage of class).
